FROM ubuntu:24.04

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update -y && \
    apt-get upgrade -y && \
    yes | unminimize && \
    apt-get install -y \
        apt-transport-https \
        autoconf \
        automake \
        cpplint \
        curl \
        dos2unix \
        git \
        language-pack-en \
        make \
        man \
        manpages \
        nano \
        nodejs \
        npm \
        pandoc \
        pkg-config \
        pngcrush \
        python3 \
        software-properties-common \
        texinfo \
        unzip \
        valgrind \
        ;

# unprivileged user
RUN deluser --remove-home ubuntu && \
    mkdir -p /code && \
    (groupadd -g $HOST_GID user || true) && \
    (useradd -r -u $HOST_UID -g $HOST_GID user || true) && \
    chown $HOST_UID:$HOST_GID /code && \
    mkdir -p /home/user && \
    chown $HOST_UID:$HOST_GID /home/user

# doctoc
RUN npm install -g doctoc

# clang
RUN curl -L https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \
    add-apt-repository "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-10 main" && \
    apt-get update -y && \
    apt-get install -y clang clang-format clang-tidy

# tmbasic dependencies
COPY deps.mk /tmp/deps.mk
COPY mtar.c /tmp/mtar.c
COPY deps.tar /tmp/

# If you're trying to fix a failure here, comment everything below this point.
# Run the container. Run "export ARCH=x86_64" then paste the command below.
RUN mkdir -p /tmp/downloads && \
    tar xf /tmp/deps.tar -C /tmp/downloads && \
    mkdir -p /usr/local/$(uname -m)-linux-gnu/include && \
    mkdir -p /tmp/deps && \
    cd /tmp/deps && \
    export NATIVE_PREFIX=/usr && \
    export TARGET_PREFIX=/usr/local/$(uname -m)-linux-gnu \
    export ARCH=$ARCH \
    export LINUX_DISTRO=ubuntu \
    export LINUX_TRIPLE=$(uname -m)-linux-gnu \
    export TARGET_OS=linux \
    export DOWNLOAD_DIR=/tmp/downloads && \
    (MAKEFLAGS="$MAKEFLAGS --no-print-directory --output-sync=recurse -j$(nproc)" make -f /tmp/deps.mk || make -f /tmp/deps.mk) && \
    rm -rf /tmp/deps /tmp/deps.mk

# for the benefit of vscode, symlink /usr/local/target to /usr/local/ARCH-linux-gnu
RUN ln -s /usr/local/$(uname -m)-linux-gnu /usr/local/target

# environment
COPY --chown=$HOST_UID:$HOST_GID .valgrindrc /home/user/
RUN echo "export ARCH=\"$ARCH\"" >> /etc/profile.d/tmbasic.sh && \
    echo "export IMAGE_NAME=\"$IMAGE_NAME\"" >> /etc/profile.d/tmbasic.sh && \
    echo "export PS1=\"[$IMAGE_NAME] \w\$ \"" >> /etc/profile.d/tmbasic.sh && \
    echo "export MAKEFLAGS=\"-j$(nproc)\"" >> /etc/profile.d/tmbasic.sh && \
    echo "export TARGET_OS=linux" >> /etc/profile.d/tmbasic.sh && \
    echo "export LINUX_DISTRO=ubuntu" >> /etc/profile.d/tmbasic.sh && \
    echo "export LINUX_TRIPLE=$(uname -m)-linux-gnu" >> /etc/profile.d/tmbasic.sh && \
    echo "export PREFIX=/usr/local/$(uname -m)-linux-gnu" >> /etc/profile.d/tmbasic.sh && \
    echo "export LD_LIBRARY_PATH=/usr/lib:/usr/local/lib:/usr/local/$(uname -m)-linux-gnu/lib" >> /etc/profile.d/tmbasic.sh && \
    echo "export TERM=xterm-256color" >> /etc/profile.d/tmbasic.sh && \
    echo "export EDITOR=\"nano -w\"" >> /etc/profile.d/tmbasic.sh && \
    chmod +x /etc/profile.d/tmbasic.sh

USER $HOST_UID
RUN git config --global user.name "$GIT_NAME" && \
    git config --global user.email "$GIT_EMAIL"
ENTRYPOINT ["/bin/bash", "-l"]
